{"version":3,"sources":["data/index.js","App.jsx","serviceWorker.js","index.js"],"names":["name","image","App","state","data","options","length","result","delay","getRandom","isNew","index","Math","floor","random","setState","this","setTimeout","style","display","flex","flexDirection","alignItems","justifyContent","height","width","src","padding","backgroundColor","borderRadius","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oOAAe,GACb,CACEA,KAAM,aACNC,MACE,8GAEJ,CACED,KAAM,OACNC,MACE,iFAEJ,CACED,KAAM,gBACNC,MACE,yHAEJ,CACED,KAAM,cACNC,MACE,iHAEJ,CACED,KAAM,YACNC,MACE,oIAEJ,CACED,KAAM,WACNC,MACE,mIC1BeC,E,2MACnBC,MAAQ,CACNC,OACAC,QAASD,EAAKE,OACdC,OAAQ,GACRC,MAAO,I,EAETC,UAAY,WAEV,IADA,IAAIC,GAAQ,GACK,IAAVA,GAAiB,CACtB,IAAIC,EAAQC,KAAKC,MAAMD,KAAKE,SAAW,EAAKX,MAAME,SAC9C,EAAKF,MAAMI,OAAOP,OAAS,EAAKG,MAAMC,KAAKO,GAAOX,OACpD,EAAKe,SAAS,CACZR,OAAQH,EAAKO,GACbH,MAAO,EAAKL,MAAMK,MAAQ,KAE5BE,GAAQ,K,mFAKZM,KAAKP,c,2CAEe,IAAD,OACfO,KAAKb,MAAMK,MAAQ,KACrBS,YAAW,WACT,EAAKR,cACJO,KAAKb,MAAMK,S,+BAIhB,OACE,yBACEU,MAAO,CACLC,QAAS,OACTC,KAAM,EACNC,cAAe,SACfC,WAAY,SACZC,eAAgB,WAGlB,yBACEL,MAAO,CAAEM,OAAQ,MAAOC,MAAO,QAC/BC,IAAI,8FAEN,qDACA,2CACA,yBACEA,IAAKV,KAAKb,MAAMI,OAAON,MACvBiB,MAAO,CACLM,OAAQ,MACRC,MAAO,OACPE,QAAS,KACTC,gBAAiB,QACjBC,aAAc,MAGlB,6BACCb,KAAKb,MAAMK,OAAS,GACnB,yBACEU,MAAO,CAAEM,OAAQ,MAAOC,MAAO,QAC/BC,IAAI,uEAEJ,U,GA/DqBI,aCSbC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.3a4e6d2e.chunk.js","sourcesContent":["export default [\n  {\n    name: \"Chi'Lantro\",\n    image:\n      \"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQSPQXYi-WNB789-OcSUpCRtLo721McbT1pXTSaoSD8iVRxj_Pr\"\n  },\n  {\n    name: \"Cava\",\n    image:\n      \"https://borntocoupon.com/wp-content/uploads/2018/09/Cava-Mezze-Grill-Logo.png\"\n  },\n  {\n    name: \"Quattro Gatti\",\n    image:\n      \"http://static1.squarespace.com/static/5529788ce4b05e87433cc7cd/t/552dc8c6e4b05ea8e143da9b/1582221137109/?format=1500w\"\n  },\n  {\n    name: \"Jimmy Johns\",\n    image:\n      \"https://upload.wikimedia.org/wikipedia/commons/thumb/f/fb/Jimmy_Johns_logo.svg/512px-Jimmy_Johns_logo.svg.png\"\n  },\n  {\n    name: \"P Terry's\",\n    image:\n      \"https://static.spacecrafted.com/b55ed33c13d643ed93f54b2b9e66400f/i/b796b3962f5149aab53d330de9a8b8f3/1/5feFb8zhrk/logoRegular.png\"\n  },\n  {\n    name: \"TacoDeli\",\n    image:\n      \"https://www.winningcause.org/media/catalog/product/cache/1/image/9df78eab33525d08d6e5fb8d27136e95/t/a/tacodelilogo_current.jpg\"\n  }\n];\n","import React, { Component } from \"react\";\n\nimport data from \"./data/index.js\";\nexport default class App extends Component {\n  state = {\n    data,\n    options: data.length,\n    result: \"\",\n    delay: 10\n  };\n  getRandom = () => {\n    let isNew = false;\n    while (isNew === false) {\n      let index = Math.floor(Math.random() * this.state.options);\n      if (this.state.result.name !== this.state.data[index].name) {\n        this.setState({\n          result: data[index],\n          delay: this.state.delay + 10\n        });\n        isNew = true;\n      }\n    }\n  };\n  componentDidMount() {\n    this.getRandom();\n  }\n  componentDidUpdate() {\n    if (this.state.delay < 500) {\n      setTimeout(() => {\n        this.getRandom();\n      }, this.state.delay);\n    }\n  }\n  render() {\n    return (\n      <div\n        style={{\n          display: \"flex\",\n          flex: 1,\n          flexDirection: \"column\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <img\n          style={{ height: \"15%\", width: \"auto\" }}\n          src=\"https://www.veterinarian-hospital.com/wp-content/uploads/2019/03/televet-logo-300x158.png\"\n        />\n        <h1>Lunch choo choo train</h1>\n        <h2>All aboard!</h2>\n        <img\n          src={this.state.result.image}\n          style={{\n            height: \"15%\",\n            width: \"auto\",\n            padding: \"5%\",\n            backgroundColor: \"white\",\n            borderRadius: 50\n          }}\n        />\n        <br />\n        {this.state.delay >= 10 ? (\n          <img\n            style={{ height: \"15%\", width: \"auto\" }}\n            src=\"https://chew-chewtrain.com/wp-content/uploads/2015/11/trainred.gif\"\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App.jsx\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}